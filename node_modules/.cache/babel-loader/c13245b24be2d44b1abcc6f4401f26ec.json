{"remainingRequest":"/Users/wazj/Desktop/Code/demo1/node_modules/babel-loader/lib/index.js!/Users/wazj/Desktop/Code/demo1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wazj/Desktop/Code/demo1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wazj/Desktop/Code/demo1/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wazj/Desktop/Code/demo1/src/components/HelloWorld.vue","mtime":1618219491781},{"path":"/Users/wazj/Desktop/Code/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1616393715681},{"path":"/Users/wazj/Desktop/Code/demo1/node_modules/babel-loader/lib/index.js","mtime":1616393715691},{"path":"/Users/wazj/Desktop/Code/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1616393715681},{"path":"/Users/wazj/Desktop/Code/demo1/node_modules/vue-loader/lib/index.js","mtime":1616393732647}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div class=\"hello\">\n    <button @click=\"load()\">touch me</button>\n    <button @click=\"back()\">roll back</button>\n    <button @click=\"generatorFor()\">generator</button>\n    <div class=\"up-triangle\" />\n    <p class=\"dotted-line\">\n      庭院深深，不知有多深？杨柳依依，飞扬起片片烟雾，一重重帘幕不知有多少层\n    </p>\n    <p class=\"coupon\"><span>200</span>优惠券</p>\n    <div style=\"width: 100vw\">\n      <button @click=\"callmebaby(1, 2)\">debounce</button>\n      <button @click=\"maxArea()\">maxArea</button>\n      <button @click=\"intToRoman()\">intToRoman</button>\n      <button @click=\"trap()\">trap</button>\n      <button @click=\"trap_tow()\">trap_tow</button>\n      <button @click=\"longestCommonPrefix()\">longestCommonPrefix</button>\n    </div>\n    <div style=\"width: 100vw\">\n      <button @click=\"threeSum()\">threeSum</button>\n      <button @click=\"threeSumClosest()\">threeSumClosest</button>\n      <button @click=\"letterCombinations()\">letterCombinations</button>\n      <button @click=\"fourSum()\">fourSum</button>\n      <button @click=\"isValid()\">isValid</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n  methods: {\n    load() {\n      window.location.href = \"https://www.baidu.com\";\n      // window.location.replace('https://www.baidu.com')\n    },\n    back() {\n      window.history.go(-1);\n    },\n    generatorFor() {\n      function* gener() {\n        let n = 0;\n        yield n;\n        n++;\n        return;\n      }\n      for (let x of gener()) {\n        console.log(x);\n      }\n    },\n    callmebaby(volume, data) {\n      this.debounce(this.con(volume, data), 400);\n    },\n    con(volume, data) {\n      console.log(\"change\", volume, data);\n    },\n    debounce(func, delay = 500) {\n      let context = this; // this指向发生变化，需要提出来\n      let args = arguments;\n      return (function () {\n        if (context.timeout) {\n          clearTimeout(context.timeout);\n        }\n        context.timeout = setTimeout(() => {\n          func.apply(context, args);\n        }, delay);\n      })(); // 注意:我加了()\n    },\n    maxArea() {\n      let height = [1, 8, 6, 2, 5, 4, 8, 3, 7];\n      let maxNub = 0;\n      let minLen = 0,\n        maxLen = height.length - 1;\n      while (minLen < maxLen) {\n        let nub = Math.min(height[minLen], height[maxLen]);\n        let len = maxLen - minLen;\n        maxNub = Math.max(maxNub, nub * len);\n        if (height[minLen] > height[maxLen]) {\n          maxLen--;\n        } else {\n          minLen++;\n        }\n      }\n      return maxNub;\n    },\n    intToRoman() {\n      let num = 3;\n      let i = 0,\n        j = 0,\n        k = 0,\n        l = 0,\n        q = ~~(num / 1000),\n        b = ~~((num % 1000) / 100),\n        s = ~~(((num % 1000) % 100) / 10),\n        g = ~~(((num % 1000) % 100) % 10),\n        romanNub = \"\";\n      console.log(q);\n      console.log(b);\n      console.log(s);\n      console.log(g);\n      while (i < q) {\n        romanNub += \"M\";\n        i++;\n      }\n      if (b >= 5) {\n        switch (b) {\n          case 9:\n            romanNub += \"CM\";\n            break;\n          default:\n            romanNub += \"D\";\n            while (j < b - 5) {\n              romanNub += \"C\";\n              j++;\n            }\n            break;\n        }\n      } else {\n        switch (b) {\n          case 4:\n            romanNub += \"CD\";\n            break;\n          default:\n            while (j < b) {\n              romanNub += \"C\";\n              j++;\n            }\n            break;\n        }\n      }\n      if (s >= 5) {\n        switch (s) {\n          case 9:\n            romanNub += \"XC\";\n            break;\n          default:\n            romanNub += \"L\";\n            while (k < s - 5) {\n              romanNub += \"X\";\n              k++;\n            }\n            break;\n        }\n      } else {\n        switch (s) {\n          case 4:\n            romanNub += \"XL\";\n            break;\n          default:\n            while (k < s) {\n              romanNub += \"X\";\n              k++;\n            }\n            break;\n        }\n      }\n      if (g >= 5) {\n        switch (g) {\n          case 9:\n            romanNub += \"IX\";\n            break;\n          default:\n            romanNub += \"V\";\n            while (l < g - 5) {\n              romanNub += \"I\";\n              l++;\n            }\n            break;\n        }\n      } else {\n        switch (g) {\n          case 4:\n            romanNub += \"IV\";\n            break;\n          default:\n            while (l < g) {\n              romanNub += \"I\";\n              l++;\n            }\n            break;\n        }\n      }\n      console.log(romanNub);\n      return romanNub;\n    },\n    trap() {\n      let height = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1];\n      const n = height.length;\n      if (n == 0) {\n        return 0;\n      }\n\n      const leftMax = new Array(n).fill(0);\n      leftMax[0] = height[0];\n      for (let i = 1; i < n; i++) {\n        leftMax[i] = Math.max(leftMax[i - 1], height[i]);\n      }\n      const rightMax = new Array(n).fill(0);\n      rightMax[0] = height[n - 1];\n      for (let i = n - 2; i >= 0; i--) {\n        rightMax[i] = Math.max(rightMax[i + 1], height[i]);\n      }\n      let ans = 0;\n      for (let i = 0; i < n; i++) {\n        ans += Math.min(leftMax[i], rightMax[i]) - height[i];\n      }\n      return ans;\n    },\n    trap_tow() {\n      let height = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1];\n      let left = 0,\n        right = height.length - 1,\n        leftMax = 0,\n        rightMax = 0,\n        ans = 0;\n      while (left < right) {\n        leftMax = Math.max(leftMax, height[left]);\n        rightMax = Math.max(rightMax, height[right]);\n        if (height[right] > height[left]) {\n          ans += leftMax - height[left];\n          left++;\n        } else {\n          ans += rightMax - height[right];\n          right--;\n        }\n      }\n      return ans;\n    },\n    longestCommonPrefix() {\n      const strs = [\"dog\", \"racecar\", \"car\"];\n      const strss = [];\n      const preFixs = [];\n      let maxLen = 0;\n      strs.forEach((val) => {\n        strss.push(val.split(\"\"));\n        maxLen = val.length > maxLen ? val.length : maxLen;\n      });\n      strss.forEach((val) => {\n        if (maxLen > val.length) {\n          for (let i = 0; i < maxLen - val.length + 1; i++) {\n            val.push(\"-\");\n          }\n        }\n      });\n      for (let i = 0; i < maxLen; i++) {\n        const preFix = [];\n        for (let j = 0; j < strss.length; j++) {\n          if (i === 0) {\n            if (!preFix.find((n) => n === strss[j][i])) {\n              preFix.push(strss[j][i]);\n            }\n          } else {\n            if (preFixs[i - 1].find((n) => n === strss[j][i - 1])) {\n              if (!preFix.find((n) => n === strss[j][i])) {\n                preFix.push(strss[j][i]);\n              }\n            }\n          }\n        }\n        if (preFix.length > 1) break;\n        preFixs.push(preFix);\n      }\n      let resultStr = \"\";\n      preFixs.forEach((val) => {\n        resultStr += val;\n      });\n      console.log(resultStr);\n      return resultStr;\n    },\n    threeSum() {\n      const nums = [-1, 0, 1, 2, -1, -4];\n      if (nums.length < 3) {\n        return [];\n      }\n      nums.sort((a, b) => {\n        return a - b;\n      });\n      const resultNums = [];\n      // for (let i = 0; i < nums.length; i++) {\n      //   for (let j = i + 1; j < nums.length; j++) {\n      //     for (let o = j + 1; o < nums.length; o++) {\n      //       if (nums[i] + nums[j] + nums[o] === 0) {\n      //         let issingle = true;\n      //         if (resultNums.length === 0) {\n      //           resultNums.push([nums[i], nums[j], nums[o]]);\n      //         }\n      //         if(resultNums.find(n=>{\n      //           return n.toString()==[nums[i], nums[j], nums[o]].toString()\n      //         })){\n      //           issingle = false;\n      //         }\n      //         if (issingle) {\n      //           resultNums.push([nums[i], nums[j], nums[o]]);\n      //         }\n      //       }\n      //     }\n      //   }\n      // }\n      let left = 0,\n        mid = ~~(nums.length / 2),\n        right = nums.length - 1;\n      while (left < right) {\n        const diff = 0 - nums[left] - nums[right];\n        if (nums[mid] > diff) {\n          while (left < mid) {\n            mid--;\n            let issingle = true;\n            if (nums[mid] === diff) {\n              if (resultNums.length === 0) {\n                resultNums.push([nums[left], nums[mid], nums[right]]);\n                mid = ~~(nums / 2);\n                left++;\n                break;\n              }\n              if (\n                resultNums.find((n) => {\n                  return (\n                    n.toString() ==\n                    [nums[left], nums[mid], nums[right]].toString()\n                  );\n                })\n              ) {\n                issingle = false;\n              }\n              if (issingle) {\n                resultNums.push([nums[left], nums[mid], nums[right]]);\n                mid = ~~(nums / 2);\n                left++;\n                break;\n              }\n            }\n          }\n        } else {\n          while (mid < right) {\n            mid++;\n            let issingle = true;\n            if (nums[mid] === diff) {\n              if (resultNums.length === 0) {\n                resultNums.push([nums[left], nums[mid], nums[right]]);\n                mid = ~~(nums / 2);\n                left++;\n                break;\n              }\n              if (\n                resultNums.find((n) => {\n                  return (\n                    n.toString() ==\n                    [nums[left], nums[mid], nums[right]].toString()\n                  );\n                })\n              ) {\n                issingle = false;\n              }\n              if (issingle) {\n                resultNums.push([nums[left], nums[mid], nums[right]]);\n                mid = ~~(nums / 2);\n                left++;\n                break;\n              }\n            }\n          }\n        }\n      }\n      console.log(resultNums);\n      return resultNums;\n    },\n    threeSumClosest() {\n      let nums = [1, 1, 48, 50, 99, 100, 103, 333, 333],\n        target = 250,\n        ans = 999999999,\n        sum = 0;\n      nums.sort((a, b) => a - b);\n      console.log(nums);\n      for (let i = 0; i < nums.length; i++) {\n        let left = i,\n          mid = i + 1,\n          right = nums.length - 1;\n        if (nums[left] == 48) {\n          console.log(true);\n        }\n        if (nums[left] > Math.abs(target) + 1) {\n          break;\n        }\n        if (nums[left] == nums[left - 1]) continue;\n        while (right > mid) {\n          const cak = Math.abs(target - nums[left] - nums[mid] - nums[right]);\n          if (ans > cak) {\n            ans = cak;\n            sum = nums[left] + nums[mid] + nums[right];\n            while (\n              right > mid &&\n              nums[mid] == nums[mid + 1] &&\n              nums[right] == nums[right - 1]\n            ) {\n              mid++;\n              right--;\n            }\n            mid++;\n            if (mid === right) {\n              right--;\n              mid = left + 1;\n            }\n            continue;\n          }\n          while (\n            right > mid &&\n            nums[mid] == nums[mid + 1] &&\n            nums[right] == nums[right - 1]\n          ) {\n            mid++;\n            right--;\n          }\n          mid++;\n          if (mid >= right) {\n            right--;\n            mid = left + 1;\n          }\n        }\n      }\n      return sum;\n    },\n    letterCombinations() {\n      const digits = \"\";\n      let dictionaryList = {\n        2: [\"a\", \"b\", \"c\"],\n        3: [\"d\", \"e\", \"f\"],\n        4: [\"g\", \"h\", \"i\"],\n        5: [\"j\", \"k\", \"l\"],\n        6: [\"m\", \"n\", \"o\"],\n        7: [\"p\", \"q\", \"r\", \"s\"],\n        8: [\"t\", \"u\", \"v\"],\n        9: [\"w\", \"x\", \"y\", \"z\"],\n      };\n      let resultList = [];\n      if (digits.length < 1) {\n        return [];\n      } else if (digits.length === 1) {\n        return dictionaryList[digits[0]];\n      }\n      let forlist = (list) => {\n        let delist = [];\n        resultList.forEach((val) => {\n          for (let i = 0; i < list.length; i++) {\n            delist.push(val + list[i]);\n          }\n        });\n        resultList = delist;\n      };\n      resultList = dictionaryList[digits[0]];\n      for (let i = 1; i < digits.length; i++) {\n        console.log(i);\n        forlist(dictionaryList[digits[i]]);\n      }\n      return resultList;\n    },\n    fourSum() {\n      let nums = [-1, 0, -5, -2, -2, -4, 0, 1, -2],\n        target = -9,\n        left = 0,\n        mid1 = 1,\n        mid2 = 2,\n        right = nums.length - 1,\n        resultList = [];\n      nums.sort((a, b) => a - b);\n      while (right > left) {\n        if (nums[left] + nums[mid1] + nums[mid2] > target && target > 0) {\n          return resultList;\n        }\n        while (mid2 > mid1 && right > mid2) {\n          if (nums[left] + nums[mid1] + nums[mid2] + nums[right] === target) {\n            resultList.push([nums[left], nums[mid1], nums[mid2], nums[right]]);\n          }\n          while (right > mid2 && nums[mid2] === nums[mid2 + 1]) {\n            mid2++;\n          }\n          mid2++;\n          if (mid2 >= right) {\n            while (mid2 > mid1 && nums[mid1] === nums[mid1 + 1]) {\n              mid1++;\n            }\n            mid1++;\n            mid2 = mid1 + 1;\n          }\n        }\n        while (right > left && nums[right] === nums[right - 1]) {\n          right--;\n        }\n        right--;\n        mid1 = left + 1;\n        mid2 = left + 2;\n        if (left >= right) {\n          right = nums.length;\n          while (right > left && nums[left] === nums[left + 1]) {\n            left++;\n          }\n          left++;\n          mid1 = left + 1;\n          mid2 = left + 2;\n        }\n      }\n      return resultList;\n    },\n    isValid() {\n      const s = \"{()}[]\";\n      if (s.length % 2 != 0) return false;\n      const sList = []\n      const kuohaozuo = ['{','(','[']\n      for(let i = 0;i<s.length;i++){\n        if(kuohaozuo.includes(s[i])){\n          sList.push(s[i])\n        }else{\n          if(s[i]==='}'&&sList[sList.length-1]==='{'){\n            sList.pop()\n            continue\n          }else if(s[i]===']'&&sList[sList.length-1]==='['){\n            sList.pop()\n            continue\n          }else if(s[i]===')'&&sList[sList.length-1]==='('){\n            sList.pop()\n            continue\n          }\n          return false\n        }\n      }\n      return !sList.length\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.up-triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 0 25px 25px;\n  border-color: transparent transparent rgb(0, 0, 0) transparent;\n}\n.dotted-line {\n  width: 100%;\n  margin: auto;\n  padding: 20px;\n  border: 1px dashed transparent;\n  background: linear-gradient(white, white) padding-box,\n    repeating-linear-gradient(60deg, red 0, #ccc 0.25em, white 0, white 0.75em);\n}\n.coupon {\n  width: 300px;\n  height: 100px;\n  line-height: 100px; /* 行高 */\n  margin: 50px auto;\n  text-align: center;\n  position: relative; /* 相对定位 */\n  background: radial-gradient(circle at right bottom, transparent 10px, #fff 0)\n      top right / 50% 50% no-repeat,\n    radial-gradient(circle at left bottom, transparent 10px, #000 0) top left /\n      50% 50% no-repeat,\n    radial-gradient(circle at right top, transparent 10px, #000 0) bottom right /\n      50% 50% no-repeat,\n    radial-gradient(circle at left top, transparent 10px, #ffffff 0) bottom left /\n      50% 50% no-repeat;\n  filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.2));\n}\n.coupon span {\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 10px;\n  color: red;\n  font-size: 50px;\n  font-weight: 400;\n}\n</style>\n"],"sourceRoot":"src/components"}]}